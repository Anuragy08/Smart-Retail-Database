-- 1. Retrive the top 5 customers who have placed the most orders.
select t1. customer_id, concat(t1.first_name, ' ', t1.last_name) as "Customer's_name", 
sum(t3.quantity) as "Number of order placed"
from customers t1
join orders t2 on t1.customer_id = t2.customer_id
join order_items t3 on t2.order_id = t3.order_id
group by 1,2 
limit 5;

-- 2. Find the store that has the highest total stock quantity.
with highest_stocks as (
select t1.store_id, t1.store_name, sum(t2.quantity) as highest_total_stock_quantity from stores t1
join stocks t2 on t1.store_id = t2.store_id
group by 1,2)
select store_id, store_name, highest_total_stock_quantity from highest_stocks
order by highest_total_stock_quantity desc
limit 1;

-- 3. Write a query to calculate the total revenue generated by each store.
select t1.store_id, t1.store_name, 
sum((t3.list_price*t3.quantity) - t3.discount) as "Total Revenue Generated"
from stores t1
join orders t2 on t1.store_id = t2.store_id
join order_items t3 on t2.order_id = t3.order_id
group by 1,2;

-- 4. Identify which product has been order the most and the number of times it has been ordered.
with most_ordered_product as
(
select t1.product_id, t1.product_name,
count(t2.product_id) as "Number_of_times", 
sum(t2.quantity) as "Most_ordered_Product"
from products t1
join order_items t2 on t1.product_id = t2.product_id
group by 1,2)
select product_id, product_name, Number_of_times, Most_ordered_Product 
from most_ordered_product;

-- 5. Find all products that have been ordered more than 10 times in a single order.
 with most_ordered_product as
(
select t1.product_id, t1.product_name,
count(t2.order_id) as "Number_of_times"
from products t1
join order_items t2 on t1.product_id = t2.product_id
group by 1,2)
select product_id, product_name, Number_of_times 
from most_ordered_product
where Number_of_times>10
order by Number_of_times ASC;

-- 6. create a stored procedure that accepts a store_id and returns all products available in that store.
DELIMITER//
Create procedure store_retrival(IN store_id varchar(100))
begin
select t1.product_id, product_name from stocks t1
join products t2 on t1.product_id = t2.product_id
where store_id = store_id
end//
DELIMITER;

-- 7. Write an optimized query to retrive customers who have never placed an order.
select t1.customer_ID, concat(t1.first_name,' ', t1.last_name) as "Customer's name" from customers t1
join orders t2 on t1.customer_id = t2.customer_id
where order_id = (select order_id from orders where order_id is null);

-- 8. Identify which store has the least variety of products in stock.   
